rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && request.auth.token.admin == true;
    }

    function isValidTimestamp(timestamp) {
      return timestamp is timestamp && 
             timestamp.seconds is number && 
             timestamp.nanos is number;
    }

    // Companies collection
    match /companies/{companyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && 
                      (resource.data.createdBy == request.auth.uid || isAdmin());
      allow delete: if isAuthenticated() && 
                      (resource.data.createdBy == request.auth.uid || isAdmin());
    }

    // Contacts collection
    match /contacts/{contactId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.createdBy == request.auth.uid || 
        isAdmin() ||
        (resource.data.type == "business" && 
         ('employeeCount' in request.resource.data) && 
         request.resource.data.type == "business")
      );
      allow delete: if isAuthenticated() && 
                      (resource.data.createdBy == request.auth.uid || isAdmin());
    }
    
    // User settings and preferences
    match /users/{userId} {
      match /settings/{document=**} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
      
      match /preferences/{document=**} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }
  }
}
